<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://treasure-house.randark.site/blog</id>
    <title>Randark_JMT - 陈橘墨 Blog</title>
    <updated>2023-10-26T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="http://treasure-house.randark.site/blog"/>
    <subtitle>Randark_JMT - 陈橘墨 Blog</subtitle>
    <icon>http://treasure-house.randark.site/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[0xGame2023 oh-my-linux 技术分析]]></title>
        <id>http://treasure-house.randark.site/blog/2023-10-26-0xGame2023-oh-my-linux</id>
        <link href="http://treasure-house.randark.site/blog/2023-10-26-0xGame2023-oh-my-linux"/>
        <updated>2023-10-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[首先，先分析镜像的内核信息：]]></summary>
        <content type="html"><![CDATA[<p>首先，先分析镜像的内核信息：</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ vol -f oh-my-linux.mem banner</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Volatility 3 Framework 2.0.1</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Progress:  100.00               PDB scanning finished</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Offset  Banner</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">0x4f000200      Linux version 5.10.0-21-amd64 (debian-kernel@lists.debian.org) (gcc-10 (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2) #1 SMP Debian 5.10.162-1 (2023-01-21)</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">0x58ecc240      Linux version 5.10.0-21-amd64 (debian-kernel@lists.debian.org) (gcc-10 (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2) #1 SMP Debian 5.10.162-1 (2023-01-21)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>通过内核信息，可以定位到 <code>Debian 5.10.0-21-amd64</code> 的 deb 发行包文件：</p>
<p><a href="https://debian.sipwise.com/debian-security/pool/main/l/linux/" target="_blank" rel="noopener noreferrer">Index of /debian-security/pool/main/l/linux</a></p>
<p><img loading="lazy" alt="linux-image-5.10.0-21-amd64-dbg_5.10.162-1_amd64.deb" src="http://treasure-house.randark.site/assets/images/image_20231022-192239-e7d3586f04208df3e0a905e4f70cbff4.png" width="1920" height="1050" class="img_ev3q"></p>
<p>下载下来后，将其作为 <code>tar.xz</code> 文件进行解压缩，得到 <code>data.tar</code> 文件，解压缩制作符号表需要的文件：</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~/linux-image$ tar -xvf data.tar ./usr/lib/debug/boot/</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">./usr/lib/debug/boot/</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">./usr/lib/debug/boot/System.map-5.10.0-21-amd64</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">./usr/lib/debug/boot/vmlinux-5.10.0-21-amd64</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后开始制作符号表文件</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$  ./dwarf2json linux --system-map ~/linux-image/usr/lib/debug/boot/System.map-5.10.0-21-amd64 --elf ~/linux-image/usr/lib/debug/boot/vmlinux-5.10.0-21-amd64  &gt;  linux-image-5.10.0-21-amd64-dbg_5.10.162-1_amd64.json</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ sudo mv linux-image-5.10.0-21-amd64-dbg_5.10.162-1_amd64.json /usr/local/lib/python3.10/dist-packages/volatility3/symbols/linux/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>尝试使用符号表进行分析：</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ vol -f oh-my-linux.mem linux.pslist</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Volatility 3 Framework 2.0.1</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Progress:  100.00               Stacking attempts finished</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">PID     PPID    COMM</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">1       0       systemd</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">2       0       kthreadd</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">3       2       rcu_gp</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">4       2       rcu_par_gp</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">6       2       kworker/0:0H</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">8       2       mm_percpu_wq</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">9       2       rcu_tasks_rude_</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">10      2       rcu_tasks_trace</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">11      2       ksoftirqd/0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">12      2       rcu_sched</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">13      2       migration/0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">14      2       kworker/0:1</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">15      2       cpuhp/0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">17      2       kdevtmpfs</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">18      2       netns</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">19      2       kauditd</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">20      2       khungtaskd</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">21      2       oom_reaper</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">22      2       writeback</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">23      2       kcompactd0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">24      2       ksmd</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">25      2       khugepaged</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">43      2       kintegrityd</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">44      2       kblockd</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">45      2       blkcg_punt_bio</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">46      2       edac-poller</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">47      2       devfreq_wq</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">48      2       kworker/0:1H</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">49      2       kswapd0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">50      2       kthrotld</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">......</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>成功实现 Volatility3 加载符号表，并分析镜像</p>
<p>如果要使用 Volatility2 进行分析的话，需要使用 linux-header,linux-image 等相关软件包进行编译，为了不影响主机环境，以及懒得开虚拟机的话，可以使用 docker 进行编译：</p>
<p><a href="https://github.com/CTF-Archives/profile-builder" target="_blank" rel="noopener noreferrer">CTF-Archives / profile-builder</a></p>
<p>编译后，应该会在 <code>./docker/data</code> 目录下得到编译好的 dwarf 文件，即可开始组装适用于 Volatility2 的配置文件</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain"># 这里用的 System.map 文件，为上面拆 deb 包得到的</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ zip Debian_5.10.0-21-amd64_profile.zip module.dwarf ~/linux-image/usr/lib/debug/boot/System.map-5.10.0-21-amd64</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ mv Debian_5.10.0-21-amd64_profile.zip ./volatility2/volatility/plugins/overlays/linux/</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ python2 ./volatility2/vol.py --info | grep Profile | grep Linux</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Volatility Foundation Volatility Framework 2.6.1</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">LinuxDebian_5_10_0-21-amd64_profilex64  - A Profile for Linux Debian_5.10.0-21-amd64_profile x64</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">LinuxUbuntu_6_2_0-35-generic_profilex64 - A Profile for Linux Ubuntu_6.2.0-35-generic_profile x64</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>成功制作并在 Volatility2 中加载了配置文件，并工作正常</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ python2 ./volatility2/vol.py -f oh-my-linux.mem --profile=LinuxDebian_5_10_0-21-amd64_profilex64 linux_bash</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Volatility Foundation Volatility Framework 2.6.1</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">WARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present in vtypes</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">WARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present in vtypes</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Pid      Name                 Command Time                   Command</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-------- -------------------- ------------------------------ -------</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    1014 bash                 2023-02-25 15:45:08 UTC+0000   echo $SHELL</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    1014 bash                 2023-02-25 15:45:23 UTC+0000   echo "Bash doesn't feel as good as zsh"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    1014 bash                 2023-02-25 15:45:27 UTC+0000   echo "lol"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    1014 bash                 2023-02-25 15:45:29 UTC+0000   zsh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>读取 zsh 的历史记录，就能知道怎么解题了</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ cat a1</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677339944:0;echo $SHELL</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677339951:0;sudo apt install curl</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340139:0;sh -c "$(curl -fsSL https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh)"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340199:0;echo $SHELL</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340205:0;echo "nice"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340215:0;mv mysecretflag1.zsh-theme ~/.oh-my-zsh/themes</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340217:0;ls</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340222:0;vim ~/.zshrc</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340268:0;source ~/.zshrc</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340271:0;ls</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340299:0;zip -o flag2.zip flag2.txt -P $SHELL</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340311:0;rm -rf flag2.txt</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340315:0;ls</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340324:0;G1v3m3F14ggg3</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340335:0;echo "lol"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">: 1677340354:0;sudo ./avml oh-my-linux.mem</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>陈橘mo</name>
            <uri>https://randark.site</uri>
        </author>
        <category label="Memory-Forensic" term="Memory-Forensic"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[内存取证实验 - 镜像 + 配置文件]]></title>
        <id>http://treasure-house.randark.site/blog/2023-10-25-MemoryForensic-Test</id>
        <link href="http://treasure-house.randark.site/blog/2023-10-25-MemoryForensic-Test"/>
        <updated>2023-10-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[新建虚拟机，使用 ubuntu-22.04.2-desktop-amd64.iso 作为安装镜像，正常完成安装，选择最小化安装，并且安装过程中不进行自动更新]]></summary>
        <content type="html"><![CDATA[<p>新建虚拟机，使用 <code>ubuntu-22.04.2-desktop-amd64.iso</code> 作为安装镜像，正常完成安装，选择最小化安装，并且安装过程中不进行自动更新</p>
<p><img loading="lazy" alt="Ubuntu install option" src="http://treasure-house.randark.site/assets/images/image_20231037-233754-7cad03aaa7d37dd3e9f21d09d9f8fe55.png" width="1280" height="768" class="img_ev3q"></p>
<p>等待安装完成后，为纯净状态制作快照</p>
<p><img loading="lazy" alt="Vmware Create Init Capture" src="http://treasure-house.randark.site/assets/images/image_20231046-234659-799a2dca4087bd107b3e36aa0e9ae902.png" width="1920" height="1058" class="img_ev3q"></p>
<p>然后安装必要的软件包：</p>
<ul>
<li>openssh-server</li>
<li>make</li>
<li>gcc</li>
<li>net-tools</li>
</ul>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~$ sudo mv /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~$ sudo nano /etc/apt/sources.list</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># 将 apt 的源仓库地址换为 ustc 中科大源</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~$ sudo apt update</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">......</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~$ sudo apt install openssh-server gcc make net-tools</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">......</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~$ sudo systemctl enable ssh</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Synchronizing state of ssh.service with SysV service script with /lib/systemd/systemd-sysv-install.</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Executing: /lib/systemd/systemd-sysv-install enable ssh</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~$ sudo systemctl start ssh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后，通过 ssh 与 sftp 进行操作：首先，将 <a href="https://github.com/microsoft/avml" target="_blank" rel="noopener noreferrer">AVML</a> 的二进制文件传输到测试机上，并授予执行权限，然后开始制作镜像</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~$ chmod +x avml</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~$ sudo ./avml out.lime</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~$ ls -lh</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">total 4.1G</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rwxrwxr-x 1 randark randark 6.4M 10 月 26 00:01 avml</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rw------- 1 root    root    4.0G 10 月 26 00:02 out.lime</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">drwx------ 3 randark randark 4.0K 10 月 25 23:52 snap</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>成功得到 <code>out.lime</code> 内存镜像文件</p>
<p>接下来，开始构建 <code>dwarf</code> 内核调试文件，与获取 <code>System.map</code> 内存表文件</p>
<p>首先，确定 Linux Kernel 的版本</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~$ uname -a</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Linux randark-test 6.2.0-35-generic #35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Fri Oct  6 10:23:26 UTC 2 x86_64 x86_64 x86_64 GNU/Linux</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后传输 dwarf 内核调试文件的编译文件：<a href="https://github.com/volatilityfoundation/volatility/tree/master/tools/linux" target="_blank" rel="noopener noreferrer">volatility/tools/linux</a>，并尝试进行编译</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~/linux$ ls -lh</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">total 32K</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">drwxrwxr-x 2 randark randark 4.0K 10 月 24 23:54 kcore</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rw-rw-r-- 1 randark randark  384 10 月 24 23:54 Makefile</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rw-rw-r-- 1 randark randark  314 10 月 24 23:54 Makefile.enterprise</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rw-rw-r-- 1 randark randark  18K 10 月 24 23:54 module.c</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~/linux$ make</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make -C //lib/modules/6.2.0-35-generic/build CONFIG_DEBUG_INFO=y M="/home/randark/linux" modules</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make[1]: Entering directory '/usr/src/linux-headers-6.2.0-35-generic'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">warning: the compiler differs from the one used to build the kernel</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  The kernel was built by: x86_64-linux-gnu-gcc-11 (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  You are using:           gcc-11 (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  CC [M]  /home/randark/linux/module.o</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">/home/randark/linux/module.c:136: warning: "__rcu" redefined</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  136 | #define __rcu</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      |</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">In file included from &lt;command-line&gt;:</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">././include/linux/compiler_types.h:52: note: this is the location of the previous definition</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">   52 | # define __rcu          BTF_TYPE_TAG(rcu)</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      |</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  MODPOST /home/randark/linux/Module.symvers</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ERROR: modpost: missing MODULE_LICENSE() in /home/randark/linux/module.o</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make[2]: *** [scripts/Makefile.modpost:138: /home/randark/linux/Module.symvers] Error 1</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make[1]: *** [Makefile:1978: modpost] Error 2</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make[1]: Leaving directory '/usr/src/linux-headers-6.2.0-35-generic'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make: *** [Makefile:10: dwarf] Error 2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>可以发现编译过程中存在致命错误：<code>modpost: missing MODULE_LICENSE() in /home/randark/linux/module.o</code></p>
<p>在 <code>module.c</code> 的文件末尾加上以下语句：</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token function" style="color:rgb(130, 170, 255)">MODULE_LICENSE</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"GPL"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>或者执行：</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">echo 'MODULE_LICENSE("GPL");' &gt;&gt; module.c</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>继续尝试编译：</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~/linux$ make</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make -C //lib/modules/6.2.0-35-generic/build CONFIG_DEBUG_INFO=y M="/home/randark/linux" modules</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make[1]: Entering directory '/usr/src/linux-headers-6.2.0-35-generic'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">warning: the compiler differs from the one used to build the kernel</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  The kernel was built by: x86_64-linux-gnu-gcc-11 (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  You are using:           gcc-11 (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  CC [M]  /home/randark/linux/module.o</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">/home/randark/linux/module.c:136: warning: "__rcu" redefined</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  136 | #define __rcu</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      |</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">In file included from &lt;command-line&gt;:</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">././include/linux/compiler_types.h:52: note: this is the location of the previous definition</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">   52 | # define __rcu          BTF_TYPE_TAG(rcu)</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      |</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  MODPOST /home/randark/linux/Module.symvers</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  CC [M]  /home/randark/linux/module.mod.o</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  LD [M]  /home/randark/linux/module.ko</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  BTF [M] /home/randark/linux/module.ko</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Skipping BTF generation for /home/randark/linux/module.ko due to unavailability of vmlinux</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make[1]: Leaving directory '/usr/src/linux-headers-6.2.0-35-generic'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">dwarfdump -di module.ko &gt; module.dwarf</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">/bin/sh: 1: dwarfdump: not found</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>继续发现存在致命错误：<code>/bin/sh: 1: dwarfdump: not found</code></p>
<p>查阅相关文档 <a href="https://github.com/volatilityfoundation/volatility/wiki/Linux#creating-a-new-profile" target="_blank" rel="noopener noreferrer">Creating a new profile</a> 后，得知需要安装以下工具：</p>
<ul>
<li>dwarfdump</li>
</ul>
<p>继续尝试编译：</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~/linux$ make</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make -C //lib/modules/6.2.0-35-generic/build CONFIG_DEBUG_INFO=y M="/home/randark/linux" modules</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make[1]: Entering directory '/usr/src/linux-headers-6.2.0-35-generic'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">warning: the compiler differs from the one used to build the kernel</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  The kernel was built by: x86_64-linux-gnu-gcc-11 (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  You are using:           gcc-11 (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  CC [M]  /home/randark/linux/module.o</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">/home/randark/linux/module.c:136: warning: "__rcu" redefined</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  136 | #define __rcu</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      |</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">In file included from &lt;command-line&gt;:</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">././include/linux/compiler_types.h:52: note: this is the location of the previous definition</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">   52 | # define __rcu          BTF_TYPE_TAG(rcu)</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      |</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  MODPOST /home/randark/linux/Module.symvers</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  CC [M]  /home/randark/linux/module.mod.o</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  LD [M]  /home/randark/linux/module.ko</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  BTF [M] /home/randark/linux/module.ko</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Skipping BTF generation for /home/randark/linux/module.ko due to unavailability of vmlinux</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make[1]: Leaving directory '/usr/src/linux-headers-6.2.0-35-generic'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">dwarfdump -di module.ko &gt; module.dwarf</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make -C //lib/modules/6.2.0-35-generic/build M="/home/randark/linux" clean</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make[1]: Entering directory '/usr/src/linux-headers-6.2.0-35-generic'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  CLEAN   /home/randark/linux/Module.symvers</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">make[1]: Leaving directory '/usr/src/linux-headers-6.2.0-35-generic'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~/linux$ ls -lh</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">total 3.0M</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">drwxrwxr-x 2 randark randark 4.0K 10 月 24 23:54 kcore</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rw-rw-r-- 1 randark randark  384 10 月 24 23:54 Makefile</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rw-rw-r-- 1 randark randark  314 10 月 24 23:54 Makefile.enterprise</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rw-rw-r-- 1 randark randark  18K 10 月 26 00:14 module.c</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rw-rw-r-- 1 randark randark 2.9M 10 月 26 00:19 module.dwarf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>成功得到了 dwarf 内核调试文件。接下来获取 <code>System.map</code> 内存表文件</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~/linux$ ls -lh /boot/System.map-$(uname -r)</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rw------- 1 root root 7.7M 10 月  6 17:29 /boot/System.map-6.2.0-35-generic</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>确定 <code>System.map</code> 内存表文件的路径之后，就可以开始打包适用于 Volatility2 的配置文件：</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@randark-test:~/linux$ sudo zip $(lsb_release -i -s)_$(uname -r)_profile.zip module.dwarf /boot/System.map-$(uname -r)</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  adding: module.dwarf (deflated 91%)</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  adding: boot/System.map-6.2.0-35-generic (deflated 82%)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>成功得到适用于 Volatility2 的配置文件，以及内存镜像之后，就可以使用 Volatility2 进行分析。首先，将制作好的配置文件加入到 Volatility2 的配置文件文件夹</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ mv Ubuntu_6.2.0-35-generic_profile.zip ./volatility2/volatility/plugins/overlays/linux/</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ python2 ./volatility2/vol.py --info | grep Profile</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Volatility Foundation Volatility Framework 2.6.1</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Profiles</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">LinuxUbuntu_6_2_0-35-generic_profilex64 - A Profile for Linux Ubuntu_6.2.0-35-generic_profile x64</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">......</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后使用 profile 进行内存镜像的解析</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ python2 ./volatility2/vol.py -f ~/out.lime linux_banner --profile=LinuxUbuntu_6_2_0-35-generic_profilex64</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Volatility Foundation Volatility Framework 2.6.1</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Traceback (most recent call last):</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  File "./volatility2/vol.py", line 192, in &lt;module&gt;</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    main()</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  File "./volatility2/vol.py", line 183, in main</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    command.execute()</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  File "/home/randark/volatility2/volatility/plugins/linux/common.py", line 67, in execute</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    commands.Command.execute(self, *args, **kwargs)</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  File "/home/randark/volatility2/volatility/commands.py", line 116, in execute</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    if not self.is_valid_profile(profs[self._config.PROFILE]()):</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  File "/home/randark/volatility2/volatility/plugins/overlays/linux/linux.py", line 218, in __init__</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    obj.Profile.__init__(self, *args, **kwargs)</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  File "/home/randark/volatility2/volatility/obj.py", line 862, in __init__</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    self.reset()</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  File "/home/randark/volatility2/volatility/plugins/overlays/linux/linux.py", line 232, in reset</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    self.load_vtypes()</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  File "/home/randark/volatility2/volatility/plugins/overlays/linux/linux.py", line 269, in load_vtypes</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    vtypesvar = dwarf.DWARFParser(dwarfdata).finalize()</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  File "/home/randark/volatility2/volatility/dwarf.py", line 72, in __init__</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    self.feed_line(line)</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  File "/home/randark/volatility2/volatility/dwarf.py", line 163, in feed_line</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    self.process_statement(**parsed) #pylint: disable-msg=W0142</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  File "/home/randark/volatility2/volatility/dwarf.py", line 267, in process_statement</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    d = data['DW_AT_data_member_location']</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">KeyError: 'DW_AT_data_member_location'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>经过对这个报错的跟踪，发现已有人提出了相关 issue：<a href="https://github.com/volatilityfoundation/volatility/issues/828" target="_blank" rel="noopener noreferrer">Linux Profile Error - KeyError: 'DW_AT_data_member_location' #828</a></p>
<p>根据 issue 的发展历史，可以定位到问题的起因是 Volatility2 对于新版 dwarfdump 生成的 dwarf 文件的支持性不加所导致的。将前辈所制作的新版 <code>dwarf.py</code> <a href="https://github.com/volatilityfoundation/volatility/blob/7113c441d74a8fa1b8d5c056e77900e500453287/volatility/dwarf.py" target="_blank" rel="noopener noreferrer">volatility/dwarf.py</a> 替换掉原版 Volatility2 的 <code>dwarf.py</code> 文件</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~/volatility2/volatility$ ls -lh | grep dwarf</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rw-rw-r-- 1 randark randark  15K 10 月 24 23:54 dwarf.py</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~/volatility2/volatility$ mv dwarf.py dwarf.py.bak</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~/volatility2/volatility$ nano dwarf.py</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~/volatility2/volatility$ ls -lh | grep dwarf</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rw-rw-r-- 1 randark randark  16K 10 月 26 00:48 dwarf.py</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">-rw-rw-r-- 1 randark randark  15K 10 月 24 23:54 dwarf.py.bak</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>再次尝试分析：</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ python2 ./volatility2/vol.py -f ~/out.lime --profile=LinuxUbuntu_6_2_0-35-generic_profilex64 linux_banner</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Volatility Foundation Volatility Framework 2.6.1</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">WARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present in vtypes</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">WARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present in vtypes</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">No suitable address space mapping found</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Tried to open image as:</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> MachOAddressSpace: mac: need base</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> LimeAddressSpace: lime: need base</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> WindowsHiberFileSpace32: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> WindowsCrashDumpSpace64BitMap: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> WindowsCrashDumpSpace64: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> HPAKAddressSpace: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> VMWareMetaAddressSpace: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> VirtualBoxCoreDumpElf64: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> VMWareAddressSpace: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> QemuCoreDumpElf: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> WindowsCrashDumpSpace32: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> SkipDuplicatesAMD64PagedMemory: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> WindowsAMD64PagedMemory: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> LinuxAMD64PagedMemory: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> AMD64PagedMemory: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> IA32PagedMemoryPae: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> IA32PagedMemory: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> OSXPmemELF: No base Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> MachOAddressSpace: MachO Header signature invalid</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> MachOAddressSpace: MachO Header signature invalid</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> LimeAddressSpace: Invalid Lime header signature</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> WindowsHiberFileSpace32: PO_MEMORY_IMAGE is not available in profile</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> WindowsCrashDumpSpace64BitMap: Header signature invalid</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> WindowsCrashDumpSpace64: Header signature invalid</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> HPAKAddressSpace: Invalid magic found</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> VMWareMetaAddressSpace: VMware metadata file is not available</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> VirtualBoxCoreDumpElf64: ELF Header signature invalid</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> VMWareAddressSpace: Invalid VMware signature: -</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> QemuCoreDumpElf: ELF Header signature invalid</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> WindowsCrashDumpSpace32: Header signature invalid</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> SkipDuplicatesAMD64PagedMemory: Incompatible profile LinuxUbuntu_6_2_0-35-generic_profilex64 selected</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> WindowsAMD64PagedMemory: Incompatible profile LinuxUbuntu_6_2_0-35-generic_profilex64 selected</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> LinuxAMD64PagedMemory - EXCEPTION: 'state'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> AMD64PagedMemory - EXCEPTION: 'state'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> IA32PagedMemoryPae: Incompatible profile LinuxUbuntu_6_2_0-35-generic_profilex64 selected</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> IA32PagedMemory: Incompatible profile LinuxUbuntu_6_2_0-35-generic_profilex64 selected</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> OSXPmemELF: ELF Header signature invalid</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> FileAddressSpace: Must be first Address Space</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> ArmAddressSpace - EXCEPTION: 'state'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>很不幸，依然存在问题。根据问题细节，可以追踪到这个 issue：<a href="https://github.com/volatilityfoundation/volatility/pull/852" target="_blank" rel="noopener noreferrer">Update Linux DTB scanner to handle newer Linux kernel versions (&gt;= 5.14-rc1) #852</a></p>
<p>根据 issue 中前辈们给出的方案，将这两个 PR 做出的更改加入到本地的 Volatility2 源码中</p>
<ul>
<li><a href="https://github.com/volatilityfoundation/volatility/pull/852/commits/9ff9e9bb9103d63cbb278e991209aa11cffc61ce" target="_blank" rel="noopener noreferrer">Update Linux DTB scanner to handle newer Linux kernel versions (&gt;= 5.14-rc1) #852</a></li>
</ul>
<p><img loading="lazy" alt="PR #852 #1" src="http://treasure-house.randark.site/assets/images/image_20231058-005841-92ad9c9cdf57c3591cad8f7e85e695a9.png" width="1920" height="1050" class="img_ev3q"></p>
<ul>
<li><a href="https://github.com/volatilityfoundation/volatility/pull/852/commits/d07c69a7811d8e18ab186c9fbdf5b050529d06d2" target="_blank" rel="noopener noreferrer">Update Linux DTB scanner to handle newer Linux kernel versions (&gt;= 5.14-rc1) #852</a></li>
</ul>
<p><img loading="lazy" alt="PR #852 #2" src="http://treasure-house.randark.site/assets/images/image_20231000-010045-67fae8021f55ac57dc3e9a23836f17a3.png" width="1920" height="1050" class="img_ev3q"></p>
<p>继续尝试分析：</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">randark@memory-forensic:~$ python2 ./volatility2/vol.py -f ~/out.lime --profile=LinuxUbuntu_6_2_0-35-generic_profilex64 linux_banner</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Volatility Foundation Volatility Framework 2.6.1</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">WARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present in vtypes</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">WARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present in vtypes</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Linux version 6.2.0-35-generic (buildd@bos03-amd64-016) (x86_64-linux-gnu-gcc-11 (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0, GNU ld (GNU Binutils for Ubuntu) 2.38) #35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Fri Oct  6 10:23:26 UTC 2 (Ubuntu 6.2.0-35.35~22.04.1-gene</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>成功基于配置文件，实现对内存镜像的读取分析</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="http://treasure-house.randark.site/blog/2023-10-25-MemoryForensic-Test#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h3>
<p><a href="https://andreafortuna.org/2019/08/22/how-to-generate-a-volatility-profile-for-a-linux-system/" target="_blank" rel="noopener noreferrer">How to generate a Volatility profile for a Linux system</a></p>]]></content>
        <author>
            <name>陈橘mo</name>
            <uri>https://randark.site</uri>
        </author>
        <category label="Memory-Forensic" term="Memory-Forensic"/>
    </entry>
</feed>