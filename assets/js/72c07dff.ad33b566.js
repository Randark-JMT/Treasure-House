"use strict";(self.webpackChunktreasure_house=self.webpackChunktreasure_house||[]).push([[5109],{3058:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=s(5893),o=s(1151);const i={},r="SSH \u5b89\u5168\u7b56\u7565\u914d\u7f6e",a={id:"Attack-Defense/Security-Enhancement/SSH-policies/index",title:"SSH \u5b89\u5168\u7b56\u7565\u914d\u7f6e",description:"sshd_config",source:"@site/docs/Attack-Defense/Security-Enhancement/SSH-policies/index.md",sourceDirName:"Attack-Defense/Security-Enhancement/SSH-policies",slug:"/Attack-Defense/Security-Enhancement/SSH-policies/",permalink:"/docs/Attack-Defense/Security-Enhancement/SSH-policies/",draft:!1,unlisted:!1,editUrl:"https://github.com/Randark-JMT/Treasure-House/edit/main/docs/Attack-Defense/Security-Enhancement/SSH-policies/index.md",tags:[],version:"current",frontMatter:{},sidebar:"AttackDefense_Sidebar",previous:{title:"Windows \u65e5\u5fd7\u7b56\u7565",permalink:"/docs/Attack-Defense/Security-Enhancement/Logging-Policies/Windows"},next:{title:"\u5a01\u80c1\u60c5\u62a5",permalink:"/docs/Attack-Defense/Threat-Intelligence/"}},c={},d=[{value:"sshd_config",id:"sshd_config",level:2}];function h(n){const e={code:"code",h1:"h1",h2:"h2",pre:"pre",...(0,o.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"ssh-\u5b89\u5168\u7b56\u7565\u914d\u7f6e",children:"SSH \u5b89\u5168\u7b56\u7565\u914d\u7f6e"}),"\n",(0,t.jsx)(e.h2,{id:"sshd_config",children:"sshd_config"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-conf",children:"#Port 22 \u76d1\u542c\u7aef\u53e3\n#AddressFamily any \n#ListenAddress 0.0.0.0 \u76d1\u542c\u5730\u5740\n#ListenAddress ::\n\n#HostKey /etc/ssh/ssh_host_rsa_key\n#HostKey /etc/ssh/ssh_host_ecdsa_key\n#HostKey /etc/ssh/ssh_host_ed25519_key\n\n# Ciphers and keying\n#RekeyLimit default none\n\n# Logging\n#SyslogFacility AUTH\n#LogLevel INFO \u65e5\u5fd7\u7ea7\u522b\n\n# Authentication:\n\n#LoginGraceTime 2m\n#PermitRootLogin prohibit-password\n#StrictModes yes\n#MaxAuthTries 6\n#MaxSessions 10\n\n#PubkeyAuthentication yes\n\n# Expect .ssh/authorized_keys2 to be disregarded by default in future.\n#AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2\n\n#AuthorizedPrincipalsFile none\n\n#AuthorizedKeysCommand none\n#AuthorizedKeysCommandUser nobody\n\n# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts\n#HostbasedAuthentication no\n# Change to yes if you don't trust ~/.ssh/known_hosts for\n# HostbasedAuthentication\n#IgnoreUserKnownHosts no\n# Don't read the user's ~/.rhosts and ~/.shosts files\n#IgnoreRhosts yes\n\n# To disable tunneled clear text passwords, change to no here!\n#PasswordAuthentication yes\n#PermitEmptyPasswords no \u7a7a\u5bc6\u7801\u767b\u5f55\n\n# Change to yes to enable challenge-response passwords (beware issues with\n# some PAM modules and threads)\nChallengeResponseAuthentication no\n\n# Kerberos options\n#KerberosAuthentication no\n#KerberosOrLocalPasswd yes\n#KerberosTicketCleanup yes\n#KerberosGetAFSToken no\n\n# GSSAPI options\n#GSSAPIAuthentication no\n#GSSAPICleanupCredentials yes\n#GSSAPIStrictAcceptorCheck yes\n#GSSAPIKeyExchange no\n\n# Set this to 'yes' to enable PAM authentication, account processing,\n# and session processing. If this is enabled, PAM authentication will\n# be allowed through the ChallengeResponseAuthentication and\n# PasswordAuthentication.  Depending on your PAM configuration,\n# PAM authentication via ChallengeResponseAuthentication may bypass\n# the setting of \"PermitRootLogin without-password\".\n# If you just want the PAM account and session checks to run without\n# PAM authentication, then enable this but set PasswordAuthentication\n# and ChallengeResponseAuthentication to 'no'.\nUsePAM yes\n\n#AllowAgentForwarding yes\n#AllowTcpForwarding yes TCP\u7aef\u53e3\u8f6c\u53d1\n#GatewayPorts no\nX11Forwarding yes # X11\u7aef\u53e3\u8f6c\u53d1\n#X11DisplayOffset 10\n#X11UseLocalhost yes\n#PermitTTY yes\nPrintMotd no\n#PrintLastLog yes \u767b\u5165\u663e\u793a\u4e0a\u6b21\u767b\u5f55\u65f6\u95f4\u53caIP\u5730\u5740\n#TCPKeepAlive yes\n#UseLogin no\n#PermitUserEnvironment no\n#Compression delayed\n#ClientAliveInterval 0 \u7a7a\u95f2\u8d85\u65f6\u9000\u51fa\u65f6\u95f4\n#ClientAliveCountMax 3\n#UseDNS no\n#PidFile /var/run/sshd.pid\n#MaxStartups 10:30:100\n#PermitTunnel no\n#ChrootDirectory none\n#VersionAddendum none\n\n# no default banner path\n#Banner none\n\n# Allow client to pass locale environment variables\nAcceptEnv LANG LC_*\n\n# override default of no subsystems\nSubsystem       sftp    /usr/lib/openssh/sftp-server\n\n# Example of overriding settings on a per-user basis\n#Match User anoncvs\n#       X11Forwarding no\n#       AllowTcpForwarding no\n#       PermitTTY no\n#       ForceCommand cvs server\nPermitRootLogin yes\nPasswordAuthentication yes\nUseDNS no\n\n"})})]})}function l(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(h,{...n})}):h(n)}},1151:(n,e,s)=>{s.d(e,{Z:()=>a,a:()=>r});var t=s(7294);const o={},i=t.createContext(o);function r(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);